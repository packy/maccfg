#!/usr/bin/env bash
# for syntax highlightling in emacs, mostly

# /bin/ls options:
#
# -b Force printing of non-printable characters (as defined by
#    ctype(3) and current locale settings) in file names using
#    C escape codes whenever possible, and otherwise as \xxx
#    where xxx is the numeric value of the character in octal.
#
# -G Enable colorized output.  This option is equivalent to defining
#    CLICOLOR in the environment.
#
# -l List in long format.  If the output is to a terminal, a total
#    sum for all the file sizes is output on a line before the long
#    listing.
#
# -h When used with the -l option, use unit suffixes: Byte, Kilobyte,
#    Megabyte, Gigabyte, Terabyte and Petabyte in order to reduce the
#    number of digits to three or less using base 2 for sizes.
#
# -e Print the Access Control List (ACL) associated with the file, if
#    present, in long (-l) output.
#
# -O Include the file flags in a long (-l) output.
#
# -p Write a slash (`/') after each filename if that file is a directory.
#
# -H Symbolic links on the command line are followed.  This option is
#    assumed if none of the -F, -d, or -l options are specified.

alias   ls='/bin/ls -bG'
alias   ll='/bin/ls -bGlhOH'
alias  lll='/bin/ls -bGlhOpH'
alias llll='/bin/ls -bGlheOpH'

# LSCOLORS
# The value of this variable describes what color to use for which
# attribute when colors are enabled with CLICOLOR.  This string is a
# concatenation of pairs of the format fb, where f is the foreground
# color and b is the background color.
#
# The color designators are as follows:
#
#       a     black
#       b     red
#       c     green
#       d     brown
#       e     blue
#       f     magenta
#       g     cyan
#       h     light grey
#       A     bold black, usually shows up as dark grey
#       B     bold red
#       C     bold green
#       D     bold brown, usually shows up as yellow
#       E     bold blue
#       F     bold magenta
#       G     bold cyan
#       H     bold light grey; looks like bright white
#       x     default foreground or background
#
# Note that the above are standard ANSI colors.  The actual display
# may differ depending on the color capabilities of the terminal in
# use.
#
# The order of the attributes are as follows:
#       1.   directory
#       2.   symbolic link
#       3.   socket
#       4.   pipe
#       5.   executable
#       6.   block special
#       7.   character special
#       8.   executable with setuid bit set
#       9.   executable with setgid bit set
#       10.  directory writable to others, with sticky bit
#       11.  directory writable to others, without sticky bit
#
# The default is "exfxcxdxbxegedabagacad", i.e. blue foreground and
# default background for regular directories, black foreground and red
# background for setuid executables, etc.

export  CLICOLOR=1
export  LSCOLORS=ExfxFxdxCxehbhabagacad
#export LSCOLORS=ExfxFxdxCxGgDdabagacad
#export LSCOLORS=Exfxcxdxbxegedabagacad

function demo_ls_colors () {
    echo Generate new spec with http://geoff.greer.fm/lscolors/
    echo
    DIR=/tmp/color_demo
    FORMAT01=" 1 - directory (%s):           "; FILE01=$DIR/directory
    FORMAT02=" 2 - symbolic link (%s):       "; FILE02=$DIR/symbolic_link
    FORMAT03=" 3 - socket (%s):              "; FILE03=$DIR/socket
    FORMAT04=" 4 - pipe (%s):                "; FILE04=$DIR/pipe
    FORMAT05=" 5 - executable (%s):          "; FILE05=$DIR/executable
    FORMAT06=" 6 - block special (%s):       "; FILE06=/dev/disk0
    FORMAT07=" 7 - character special (%s):   "; FILE07=/dev/console
    FORMAT08=" 8 - executable
     with setuid bit set (%s): ";               FILE08=${FILE05}_w_setuid
    FORMAT09=" 9 - executable
     with setgid bit set (%s): ";               FILE09=${FILE05}_w_setgid
    FORMAT10="10 - directory writable to others,
         with sticky bit (%s): ";               FILE10=${FILE01}_w_sticky_bit
    FORMAT11="11 - directory writable to others,
      without sticky bit (%s): ";               FILE11=${FILE01}_wo_sticky_bit

    mkdir -p   $FILE01 $FILE10 $FILE11
    chmod 1777 $FILE10
    chmod 2777 $FILE11
    ln -s /tmp $FILE02
    python -c "import socket as s; sock = s.socket(s.AF_UNIX); sock.bind('$FILE03')"
    mkfifo $FILE04
    touch  $FILE05 ; chmod 0755 $FILE05
    touch  $FILE08 ; chmod 4755 $FILE08
    touch  $FILE09 ; chgrp everyone $FILE09 ; chmod 2755 $FILE09
    ls -Gl $DIR
    echo
    echo LSCOLORS=$LSCOLORS yields:
    for i in 1 2 3 4 5 6 7 8 9 10 11; do
        FMT=$(printf "\$FORMAT%02d" $i); eval FORMAT="$FMT"
        FIL=$(printf "\$FILE%02d" $i);   eval FILE="$FIL"
        CODE=$(perl -e 'print substr($ENV{LSCOLORS}, ($ARGV[0]-1) * 2, 2)' $i)
        printf "$FORMAT" $CODE; ls -Gd $FILE
    done
    rm -rf $DIR
}
